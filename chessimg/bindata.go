// Code generated by go-bindata.
// sources:
// pieces/.DS_Store
// pieces/bB.svg
// pieces/bK.svg
// pieces/bN.svg
// pieces/bP.svg
// pieces/bQ.svg
// pieces/bR.svg
// pieces/wB.svg
// pieces/wK.svg
// pieces/wN.svg
// pieces/wP.svg
// pieces/wQ.svg
// pieces/wR.svg
// DO NOT EDIT!

package chessimg

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _piecesDs_store = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x98\x3b\x0e\xc2\x30\x10\x44\x77\x8c\x0b\x4b\x34\x2e\x29\xdd\x70\x00\x6e\x60\x45\xe1\x04\x5c\x80\x82\x2b\xd0\xfb\xe8\x24\xda\x11\xb2\x14\x52\x50\x25\x82\x79\x92\xf5\x56\x8a\x9d\x4f\xe3\xec\xd8\xcc\x30\x3c\x1f\x17\xb3\x3c\x95\xc9\xdc\x76\xb6\x8f\x24\x8e\x05\xa1\xab\xc1\x7b\x08\x21\x84\x10\x62\xdf\xc0\x95\x8e\xdb\xbe\x86\x10\x62\x87\xcc\xfb\x43\xa1\x2b\xdd\xdc\xe0\xf5\x40\xc7\x6e\x4d\xa6\x0b\x5d\xe9\xe6\x06\xe7\x05\x3a\xd2\x89\xce\x74\xa1\x2b\xdd\xdc\xdc\xb4\xc0\xf0\x01\x3e\x19\x4c\x28\x60\x0a\x41\xa1\xeb\x97\x1f\x2d\xc4\x9f\x70\x70\xe5\xf9\xff\x7f\xb5\xd5\xfc\x2f\x84\xf8\x61\x10\xc7\xdb\x38\xd8\x3b\x10\x2c\x27\x4c\xe3\xde\xd5\xcd\xd6\x9b\x80\xe0\x87\x85\xa7\x6e\x6d\xa1\x2b\xdd\xdc\x6a\x04\x84\xd8\x8a\x57\x00\x00\x00\xff\xff\x6a\x00\x88\x6d\x04\x18\x00\x00")

func piecesDs_storeBytes() ([]byte, error) {
	return bindataRead(
		_piecesDs_store,
		"pieces/.DS_Store",
	)
}

func piecesDs_store() (*asset, error) {
	bytes, err := piecesDs_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pieces/.DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1445781173, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _piecesBbSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x54\x5d\x6f\xd3\x40\x10\x7c\xef\xaf\x58\xae\xaf\xc9\x7d\xfa\x2b\x6e\x92\x0a\xd2\x52\x21\x25\x50\x89\x16\xc4\xa3\x89\xdd\xd8\xe0\xda\x91\x7d\x6d\x08\xbf\x9e\xbd\x0f\xa7\xa1\x2d\xc2\x55\x7d\x9b\xb9\xd9\x99\xd9\x53\x2e\xd3\xf3\x5f\xf7\x35\x3c\x16\x5d\x5f\xb5\xcd\x8c\x08\xca\x09\x14\xcd\xba\xcd\xab\x66\x33\x23\xb7\x37\xef\xc7\x09\x81\x5e\x67\x4d\x9e\xd5\x6d\x53\xcc\x48\xd3\x92\xf3\xf9\xc9\xf4\xcd\xc5\xa7\xc5\xcd\xb7\xeb\x4b\xe8\x1f\x37\x70\x7d\xfb\x6e\xf9\x61\x01\x64\xcc\xd8\x57\xb5\x60\xec\xe2\xe6\x02\x3e\x7f\xb9\x02\x41\x05\x63\x97\x1f\x09\x90\x52\xeb\x6d\xca\xd8\x6e\xb7\xa3\x3b\x45\xdb\x6e\xc3\xae\xba\x6c\x5b\x56\xeb\x9e\x21\x91\x19\x22\x36\x31\x14\x13\x82\xe6\x3a\x27\x68\x61\x94\x31\x5c\xd3\xcf\x5e\x69\x97\x9c\x73\x43\x27\xc7\xd9\x05\x81\x5d\x95\xeb\x72\x46\x82\x90\x40\x59\x54\x9b\x52\xdb\x7a\x7e\x02\x30\xdd\xe0\x1c\xfb\x1a\x47\x68\xb7\xd9\xba\xd2\xfb\x54\x9c\xc1\x5d\x55\xd7\x69\x83\x83\xb9\x72\xdc\x3d\xd4\x45\x5a\x3c\x16\x4d\x9b\xe7\x1e\x3a\x62\xf7\xba\x6b\x7f\x16\xe9\x29\xb7\xcf\xf0\x79\x6c\x3d\x53\x41\xc3\x03\x52\x57\x4d\xb1\xce\xb6\x69\xd7\x3e\x34\xf9\x5f\xe8\x8f\xb6\x6a\x9e\xc1\xf7\x95\x2e\xba\xba\xc2\x25\x0d\x0e\x60\x9e\xf5\x65\xd6\x75\xd9\xde\xa7\xf3\xf0\x53\x18\x3b\xd3\xf1\x54\x76\x94\x67\xd1\x5e\x44\x1d\x82\x7d\x7f\xd0\x1a\x25\xc0\x6a\xa0\xca\x36\xd3\xa5\xaf\x01\xf2\x19\x59\xc1\x64\xa4\x22\x58\x80\x90\x54\x61\x19\x52\xae\x40\x4c\xa8\x10\x08\xd3\x40\x81\x94\x34\x1c\xa9\x00\x19\x32\xa4\xc9\xc4\xa3\x4a\xd2\x48\x78\xb6\x8a\x9c\x82\x5b\x55\x4c\xa3\xd0\xb0\xc2\x00\x8c\x60\x62\x76\x12\xaa\x24\x96\x74\x12\x9b\x7d\x15\xda\x7a\x62\x3b\x12\x1a\x1a\x86\xd3\x8b\x69\xa8\x06\x1f\x64\x44\xde\x3d\xb6\x1c\x9f\xca\xe2\x3e\xad\xe5\x4f\x06\x11\x74\x0e\x22\x2f\x1d\xd1\x28\x8e\xbd\x65\xe4\x52\x18\xe3\xc0\x24\xe3\x91\x1b\xda\xbe\x7e\x13\x60\xf3\x7f\x9f\x8e\x40\x7b\x69\xcc\x63\x7b\x0c\xe8\x23\x0f\x95\xe2\x6e\x4f\x71\x83\x70\x8f\x70\xff\x36\xf8\xc8\x90\x5d\x87\x8c\x0e\x2b\xee\xa8\x91\xb4\x0a\x0a\x11\x61\x55\xcd\xa0\x82\xbb\x41\xc5\x80\x0a\xe9\x78\xe2\xd0\x39\x54\x98\xcb\x6a\x9b\x7c\xc6\xcb\xad\xa6\xc9\x25\x71\xb9\xff\x33\x9c\x0c\x21\x81\xb7\x20\x8d\x3f\xfe\x63\x3f\xfe\x81\xe4\xa3\xd7\x50\xc3\x7d\xd2\x9b\xb2\x8d\x2f\x8e\x65\xdd\x91\xf9\x88\xcb\xc3\xc0\x2b\x1f\x6f\xe9\x8f\x66\xe5\xc7\x0d\x51\x7e\xe9\x6a\x69\x42\xaf\x8c\xb7\x48\x0c\x86\xbb\x09\x19\x64\x8f\xbf\xf8\xc7\xb7\x24\x3d\xbd\xb3\xcf\xcb\x8b\x67\xaf\xda\x99\x4f\x6b\xb3\x4e\xcd\x8f\xc8\xfc\xe4\x4f\x00\x00\x00\xff\xff\x36\x3f\xff\x69\x07\x05\x00\x00")

func piecesBbSvgBytes() ([]byte, error) {
	return bindataRead(
		_piecesBbSvg,
		"pieces/bB.svg",
	)
}

func piecesBbSvg() (*asset, error) {
	bytes, err := piecesBbSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pieces/bB.svg", size: 1287, mode: os.FileMode(420), modTime: time.Unix(1381023865, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _piecesBkSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x5d\x6f\xd3\x3c\x18\xbd\xdf\xaf\xf0\xeb\xf7\x36\xf5\x67\xbe\xdb\x6e\x12\xdd\x98\x90\x0a\x4c\x62\x03\x71\x19\x9a\xac\x09\x64\x4e\x95\x64\x2b\xe3\xd7\xf3\xd8\x71\xbc\xae\xac\x05\x44\x2e\xea\x63\xfb\xf1\xe3\x73\x8e\x8f\x3a\x3b\xfb\x7e\x57\xa3\x87\xa2\xed\xaa\x46\xcd\x31\x27\x0c\xa3\x42\xad\x9a\xbc\x52\xeb\x39\xbe\xb9\x7e\x3d\x89\x31\xea\xfa\x4c\xe5\x59\xdd\xa8\x62\x8e\x55\x83\xcf\x4e\x4f\x66\xff\x9d\xbf\x5f\x5c\x7f\xbe\xba\x40\xdd\xc3\x1a\x5d\xdd\xbc\x5a\xbe\x59\x20\x3c\xa1\xf4\x93\x5c\x50\x7a\x7e\x7d\x8e\x3e\x7c\xbc\x44\x9c\x70\x4a\x2f\xde\x61\x84\xcb\xbe\xdf\xa4\x94\x6e\xb7\x5b\xb2\x95\xa4\x69\xd7\xf4\xb2\xcd\x36\x65\xb5\xea\x28\x14\x52\x5d\x08\x87\x28\x34\xe3\x9c\xe4\x7d\x8e\xe1\x0a\xdd\x19\xc8\xa9\x6e\xfe\xc2\x71\xc1\x18\xd3\xe5\x78\x97\x3b\xc7\x68\x5b\xe5\x7d\x39\xc7\x7e\x80\x51\x59\x54\xeb\xb2\x37\xf8\xf4\x04\xa1\xd9\x1a\x74\x3c\xd6\x20\xe1\xb6\xaa\xeb\x54\x81\x9a\x29\xd2\x70\xd2\x6c\xb2\x55\xd5\x3f\xa6\xdc\xce\xdb\xfb\xba\x48\x8b\x87\x42\x35\x79\x3e\x85\x43\x6d\xf3\xad\x48\xff\x67\xe6\x1b\xe7\x13\x73\x51\xca\x49\xe0\x56\xea\x4a\x15\xab\x6c\x93\xb6\xcd\xbd\xca\xa7\x3b\x8b\x5f\x9b\x4a\x3d\x5f\xbd\xab\xfa\xa2\xad\x2b\x18\x52\xdf\x9d\xcf\xb3\xae\xcc\xda\x36\x7b\xb4\xdc\xec\xf2\x13\x3b\x23\x03\x84\x6c\xb2\xbe\x34\x08\xbe\x7c\x8e\xdf\x22\x21\x48\xe0\x81\x71\xa1\x44\xcb\x61\x12\xe2\xb1\xe0\x57\xcd\x07\x04\x39\xa6\x86\xdc\xd4\x35\xa8\xe0\x0a\x7d\x63\x18\x44\x90\x0d\x7a\x94\x83\x08\xd0\xc2\x21\x11\x79\x3c\x22\x30\x06\x9a\x9d\x4f\xcc\x9e\xc3\xc2\xd7\x48\x58\xee\x42\xef\xb1\x01\xf1\x64\xac\x79\x42\x0b\xc4\x63\xdb\x6d\xec\x3e\x8c\x2f\xea\x1c\xa5\xed\xbf\xee\xde\x43\x7d\xb9\xef\xfb\x83\xf2\x0f\x2b\x05\xa3\x03\x4f\x46\x9a\x53\xe4\xf9\x8c\x18\xa5\x66\x94\x62\xd8\x59\x5a\xc4\xa0\x66\x44\x3e\x37\x7c\x75\x55\xac\x55\x25\x46\x95\x34\x2e\x48\xf0\xc5\xe3\xa1\xd5\x24\x61\xc7\x3e\xa3\x88\x1c\x92\x83\x0b\x89\xae\x4b\x86\x43\xe1\x4e\x9f\xb1\xb9\x21\x27\x92\x67\x68\xe9\x28\xff\x40\x47\xfd\xda\x8f\xc6\xb1\xe7\x66\x5e\xac\xb9\x05\x5e\xfc\xef\x51\x3b\x7c\x8d\x14\x83\x84\x85\x43\xda\x68\xe7\x23\x93\xda\x80\xd8\x3a\xc9\x75\x58\x8c\x95\xb1\x35\xcd\x77\x56\x72\x4f\x84\x24\x74\x6e\xda\x34\x32\x5d\x9a\x90\x84\x85\xfa\x64\x48\x92\x24\x72\x0d\xfd\x1d\x4b\x63\x80\xb1\x5e\xde\xc1\x7f\x20\xfb\xd6\x7c\xbf\xcf\x12\x1b\xb2\x04\xaf\x2d\xcc\xef\x98\x99\x71\xdf\xbe\x7d\x04\x6b\x43\xda\xe4\x53\xda\xf4\xde\x5e\x26\xa5\x6f\x6a\xfc\x31\x8f\x7f\xcd\x74\x46\xd7\xf0\xff\xab\xff\x5e\x4f\x4f\x7e\x06\x00\x00\xff\xff\x85\x31\x14\x7e\x21\x06\x00\x00")

func piecesBkSvgBytes() ([]byte, error) {
	return bindataRead(
		_piecesBkSvg,
		"pieces/bK.svg",
	)
}

func piecesBkSvg() (*asset, error) {
	bytes, err := piecesBkSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pieces/bK.svg", size: 1569, mode: os.FileMode(420), modTime: time.Unix(1381119158, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _piecesBnSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xdd\x4f\xdb\x48\x10\x7f\xe7\xaf\x98\xdb\x7b\xb9\x93\x9c\xf1\x7e\x78\x6d\xaf\x49\x40\x77\x81\x43\x27\xa5\x2d\x52\xa1\x55\x1f\xad\xd8\x24\x6e\x1d\x3b\x72\x0c\x01\xfe\xfa\xce\xd8\x4e\x42\x51\x90\xfa\x40\xa4\xec\x7c\xec\xce\xcc\x6f\xbe\x3c\x3e\x7f\x5c\x95\xf0\x90\x37\x9b\xa2\xae\x26\x42\xa1\x14\x90\x57\xf3\x3a\x2b\xaa\xc5\x44\xdc\xde\xfc\x37\x8a\x05\x6c\xda\xb4\xca\xd2\xb2\xae\xf2\x89\xa8\x6a\x71\x7e\x76\x32\xfe\xe3\xe2\xd3\xf4\xe6\xdb\xf5\x25\x6c\x1e\x16\x70\x7d\xfb\xef\xec\xff\x29\x88\x91\xef\x7f\x35\x53\xdf\xbf\xb8\xb9\x80\xcf\x5f\xae\x40\xa1\xf2\xfd\xcb\x8f\x02\xc4\xb2\x6d\xd7\x89\xef\x6f\xb7\x5b\xdc\x1a\xac\x9b\x85\x7f\xd5\xa4\xeb\x65\x31\xdf\xf8\xf4\xd0\xe7\x87\x64\xe4\x93\x33\xa5\x30\x6b\x33\x41\x21\xd8\x33\x81\xab\x36\x93\x23\xe6\x5a\x4a\xc9\xcf\xc5\x4b\xec\x4a\xc0\xb6\xc8\xda\xe5\x44\x04\x56\xc0\x32\x2f\x16\xcb\xb6\xe3\xcf\x4e\x00\xc6\x0b\xca\xe3\xa9\xa4\x14\xea\x75\x3a\x2f\xda\xa7\x44\x9d\xc2\x5d\x51\x96\x49\x45\x89\xf5\xec\xe8\xd5\xd5\xa8\xb9\x2f\xf3\x24\x7f\xc8\xab\x3a\xcb\x4e\xc9\xbe\xa9\x7f\xe4\xc9\x9f\xb2\xfb\xed\xe4\x51\x17\x33\x51\x68\xf7\x9a\xb2\xa8\xf2\x79\xba\x4e\x9a\xfa\xbe\xca\x4e\x5f\x28\xbf\xd7\x45\xf5\xab\x76\x55\xb4\x79\x53\x16\x44\x92\x60\x6f\x9f\xa5\x9b\x65\xda\x34\xe9\xd3\x80\x6d\x50\x1f\xd0\x75\x19\x51\x4e\xeb\xb4\x5d\x76\x1c\x40\x36\x11\x1f\x40\x6b\x4f\x49\x98\x82\xd1\x68\x3d\xa5\xc0\xc4\x4c\x63\xa2\x9e\x71\x30\x03\x65\x99\x4e\x3b\x2a\x41\xd3\x49\x0f\x41\x1b\x7a\x23\x06\x3f\x43\x91\xba\xca\xbc\xca\x74\x2f\x0b\xf0\xdf\x02\x10\x70\xb8\x29\x51\xa4\x98\x5a\xa2\x53\xa0\x62\x0c\xac\xa7\x2d\x9a\x08\x54\xe8\xe9\x88\x01\x18\x4f\x3b\x3a\x51\x11\x32\x85\x26\x00\xa5\x88\xa1\x1b\x87\xce\x92\x4e\xa2\x0c\x41\x69\x0c\x14\x19\xa0\x0b\xf9\x5e\xb3\x67\x25\x99\xd2\x98\x28\x47\x2e\x50\x1b\xd6\x18\x4e\xda\x31\xb1\xe8\x5c\xc4\x9e\x28\x50\x48\x4a\x22\xe4\x9b\xca\xb2\x3b\xa7\x3b\xc9\x60\xec\x3c\x8a\x40\x00\x09\xb4\xa4\x3a\x30\x2c\xd4\x91\xe7\xd0\x72\x70\x43\xb5\xa3\xfa\xf5\x4c\xd4\xdf\x07\xc4\x86\xac\x0b\xb9\xb0\x72\x4f\x67\x9c\xa5\xed\x8b\xbf\xe3\x14\xa1\x8b\xc9\x83\x94\x31\x68\xe5\x71\xda\xd4\x9f\x68\x68\x52\x77\xbe\x4f\xd1\x1d\xf7\xd0\xd2\xf1\x0f\x70\x1a\xdd\x1f\x28\x2d\x60\x20\x47\x2f\xf6\x16\xcf\x47\x11\xdc\x75\xbf\x03\x82\x41\x7e\x1b\x81\xa2\x8a\x1c\xe2\xa8\x7d\x9c\xae\xb4\xc7\x2f\x06\x8b\x3d\x80\xb6\x49\xab\xcd\x5d\xdd\xac\x26\x62\x95\xb6\x4d\xf1\xf8\x97\xc4\x38\x0c\x3d\xb2\xf3\x46\x7c\xf4\xa2\xc3\xd0\x19\x6f\x64\x51\x45\xe6\xef\xf7\x01\x4f\xb3\x6a\xb9\x61\x18\x50\x1b\x49\x50\xb4\x39\x18\xdb\x5e\x08\x69\x44\xb8\x71\x11\x46\xf4\xc6\x00\x0d\x26\xad\x0d\xcd\x41\xe0\x86\x2d\x8b\xe9\x86\x57\x2e\xe0\x17\xda\xa0\xa4\xb5\xb3\x1d\xef\x78\x86\x89\xd7\xb6\xdf\x3e\x66\x89\x43\x76\x6d\x22\x5e\x8a\x83\x30\x2c\x26\x2f\x4d\x8c\x2e\x00\x13\x62\xa8\x3d\x4d\xe3\x69\xd9\x35\xc7\x8c\x30\xe4\x89\xa6\x75\x89\x63\x8f\x57\x87\x46\x89\x56\x2b\x64\xb8\x52\x73\x3f\x65\xd8\x0f\xf2\xec\x65\x4e\xcf\xf0\x3b\x65\xea\x3e\x34\x43\x8d\xc6\xfe\x82\xbe\xbf\xfc\x79\x3d\x3b\xf9\x19\x00\x00\xff\xff\xb8\x72\x7c\x2a\x21\x06\x00\x00")

func piecesBnSvgBytes() ([]byte, error) {
	return bindataRead(
		_piecesBnSvg,
		"pieces/bN.svg",
	)
}

func piecesBnSvg() (*asset, error) {
	bytes, err := piecesBnSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pieces/bN.svg", size: 1569, mode: os.FileMode(420), modTime: time.Unix(1381119126, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _piecesBpSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xdf\x6f\xd3\x30\x10\x7e\xef\x5f\x71\x98\xd7\xd4\x8e\x9d\xa4\xf9\xb1\xa6\x93\x68\xc7\x84\x34\x60\x12\x1d\x88\xc7\xa8\x09\x8d\x21\xb3\x2b\xc7\x5b\xe8\xfe\x7a\xce\x4e\x96\x01\x5a\x1f\xea\xef\xbe\xfb\xbe\xf3\xdd\xc5\xeb\xcb\xdf\xf7\x1d\x3c\x36\xa6\x97\x5a\x95\x84\xd3\x90\x40\xa3\x0e\xba\x96\xea\x58\x92\xbb\xfd\xfb\x65\x46\xa0\xb7\x95\xaa\xab\x4e\xab\xa6\x24\x4a\x93\xcb\xcd\x62\xfd\x66\xf7\x79\xbb\xff\x7e\x7b\x05\xfd\xe3\x11\x6e\xef\xde\xdd\x7c\xd8\x02\x59\x32\xf6\x2d\xda\x32\xb6\xdb\xef\xe0\xcb\xd7\x6b\xe0\x94\x33\x76\xf5\x89\x00\x69\xad\x3d\x15\x8c\x0d\xc3\x40\x87\x88\x6a\x73\x64\xd7\xa6\x3a\xb5\xf2\xd0\x33\x14\x32\x27\x44\x13\xc3\x62\x9c\xd3\xda\xd6\x04\xaf\x70\x95\xb1\x39\xd5\x97\xaf\xd8\x45\x18\x86\x4e\x4e\xfe\xee\x9d\x13\x18\x64\x6d\xdb\x92\xc4\x09\x81\xb6\x91\xc7\xd6\x7a\xbc\x59\x00\xac\x4f\x95\x6d\xf1\x04\xa8\x4b\xf2\x11\x84\x08\x72\xd8\x02\xcf\x69\x9a\x23\xe2\x59\xc0\x43\x84\x1e\x44\x2e\xe1\x4e\x9a\x39\x82\x8a\x3c\xe0\x31\x4d\xb9\xc3\x29\xf2\x09\x8d\x32\x27\x59\xd1\x2c\x0a\xf0\x3f\x01\xa4\x92\x00\xb3\x49\x3e\x42\xc1\x5d\xde\xa3\x88\x86\x91\x93\xc6\x71\x20\x62\x9a\xc5\xc0\x53\x9a\xf3\x40\xac\x1c\x8f\xa2\xd8\x47\x29\x0d\xd1\x1a\xa2\x21\xe2\x34\xc9\x26\x98\x63\xe9\x1b\x88\xa2\x67\xbc\x9d\xb0\x97\x88\x1c\x3d\x93\xd3\x55\xcb\xe7\x9a\xc8\x25\xab\xe9\x36\x91\xcd\x4d\x8c\xd0\x75\xe6\xd1\xd8\x2e\x6a\x79\x3a\x0e\x21\x12\x8a\x5b\x79\x9e\x0e\xa3\x94\x4f\x73\x8b\xd5\xb4\x0c\x0f\x5c\x72\x35\xad\x0b\x2f\x11\x1c\xf7\xe7\xd7\xf9\x04\xc4\x2f\xb8\xb7\xe7\x0e\x9f\x8a\x3e\x55\x07\x69\xcf\x05\xbf\x80\x1f\xb2\xeb\x8a\xb7\xa1\xff\x8d\xd1\xf2\xbf\xec\xd2\x3c\x74\x4d\xa1\xb4\x7a\x6a\x8c\xbe\xc0\x12\x46\xff\x6a\x5e\x2c\x63\xbc\xf4\x9f\xb7\xc0\xf1\x67\xa6\x93\xaa\x39\x54\xa7\xc2\xe8\x07\x55\xff\xc3\xfe\xd4\x52\x15\xf7\xd2\x36\x66\xa6\x7d\xd4\x49\x3c\x8a\x78\x26\xeb\xaa\x6f\x2b\x63\xaa\xb3\xbb\xbd\x99\xe9\x97\xfe\x08\x30\x7c\x8e\xee\xb5\x6d\x16\x7f\x02\x00\x00\xff\xff\x49\x41\x11\x57\x30\x03\x00\x00")

func piecesBpSvgBytes() ([]byte, error) {
	return bindataRead(
		_piecesBpSvg,
		"pieces/bP.svg",
	)
}

func piecesBpSvg() (*asset, error) {
	bytes, err := piecesBpSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pieces/bP.svg", size: 816, mode: os.FileMode(420), modTime: time.Unix(1381116483, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _piecesBqSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x51\x53\x9b\x40\x10\x7e\xf7\x57\x6c\xaf\xaf\xe4\x8e\xbb\x23\x24\x60\xd0\x69\xa3\x75\x3a\x63\x5b\x67\xaa\xed\xf4\x91\x02\x06\x5a\x3c\x32\x04\x8d\xe9\xaf\xef\xde\x71\x90\x88\x36\xd5\x19\xe3\xc3\x2e\xbb\xdf\xee\x7e\xdf\xde\x81\xb3\xe3\xfb\x9b\x12\xee\xb2\x7a\x55\x54\x2a\x22\x9c\xba\x04\x32\x95\x54\x69\xa1\x16\x11\xb9\xba\xfc\x30\x9a\x12\x58\x35\xb1\x4a\xe3\xb2\x52\x59\x44\x54\x45\x8e\x8f\x0e\x66\x6f\x4e\xbe\xcc\x2f\x7f\x5c\x9c\xc2\xea\x6e\x01\x17\x57\xef\xcf\x3f\xce\x81\x8c\x18\xfb\x2e\xe7\x8c\x9d\x5c\x9e\xc0\xd7\x6f\x67\xc0\x29\x67\xec\xf4\x33\x01\x92\x37\xcd\x32\x64\x6c\xbd\x5e\xd3\xb5\xa4\x55\xbd\x60\x67\x75\xbc\xcc\x8b\x64\xc5\x10\xc8\x34\x10\x8b\x18\x36\xe3\x9c\xa6\x4d\x4a\x70\x84\xee\x8c\xe4\xd4\x2a\x7a\xa2\x5c\xb8\xae\xab\xe1\x64\x97\x3b\x27\xb0\x2e\xd2\x26\x8f\x88\x37\x26\x90\x67\xc5\x22\x6f\x8c\x7f\x74\x00\x30\x5b\xa0\x8e\x4d\x89\x12\xaa\x65\x9c\x14\xcd\x26\xe4\x87\x70\x5d\x94\x65\xe8\x9a\x5f\xfb\x30\x1a\x24\x47\xf5\x6d\x99\x85\xd9\x5d\xa6\xaa\x34\x3d\xc4\x0e\x75\xf5\x3b\x0b\xdf\x76\x25\xed\xf3\xc8\x4c\x0d\x39\x1d\xf7\x91\xb2\x50\x59\x12\x2f\xc3\xba\xba\x55\xe9\xe1\x4e\xf0\x57\x55\xa8\x87\xd1\x9b\xa2\xc9\xea\xb2\x40\x13\x7a\x7d\x7d\x1a\xaf\xf2\xb8\xae\xe3\x4d\xa8\x70\xed\x7d\x78\xcb\xce\x68\xda\x55\x65\xa4\x0c\x88\xb5\xc5\x16\x8a\xe0\xa4\xa8\x93\x32\x83\xe4\x3e\x22\x3e\xd1\x91\x64\x83\x7b\x13\x04\xea\x88\x08\x3a\xc1\xa5\xb1\xa7\xb0\xdc\x23\x16\x1b\xa0\xb3\x1f\x2b\x04\xc5\x94\xc6\x4e\xff\x8b\x95\xfc\xf9\x7d\x65\x40\xf6\xf0\x9d\xb1\x85\x75\x96\x71\x93\xdb\x72\x48\x23\xf2\x09\x02\x47\xf8\x30\x07\x3e\xa1\x63\x47\x78\x74\x0c\xd2\xb5\xd6\xd7\x99\x73\x90\x53\xcc\x70\x89\x11\xf4\xb9\x23\x8c\x75\xe9\xc4\xe1\x2e\x0d\xd0\x17\xe3\xae\x12\x7d\xa1\xb1\x2e\x7a\x3c\xd8\x46\xb9\x47\x65\x87\xe6\x5e\xdb\xc1\xdf\x36\x35\x0c\xfe\x90\x8e\x95\x3d\xaf\xc1\x45\xf9\x79\xdb\x34\x8f\xee\xd7\x56\xdf\xbf\x64\xa1\x99\x02\x8e\x1e\x1b\x8b\x37\xd0\x91\xae\x56\xab\x79\x4a\x7c\xec\x3c\xb4\x8e\xd4\x74\xe6\x2d\x5a\x6a\xe6\xad\xe7\xf7\x56\xb7\x93\x13\x9d\xe0\x8e\xde\x4a\x6f\xed\xfa\x24\x6a\x06\xd1\x7b\xd2\xeb\xb2\x9d\x27\xf5\xaa\x4c\x07\x1d\xf1\x6d\xc6\x07\x3d\xad\x1d\x29\x65\x47\x43\x5a\x62\xb2\xa7\xaa\x13\x2d\x7d\x83\x47\x41\xfa\x88\xa6\xf6\xa0\xe6\xed\x64\xb3\xf2\xed\x61\x3e\x7f\xb7\x7b\x76\xd9\xc9\x7c\x87\x02\x1c\x89\xed\xc1\xc5\x3f\x2b\x6a\xd8\xdb\xbc\x67\xbb\x2f\xe5\xa3\xaf\xc1\x0b\xc6\x8a\xe0\xc1\x50\xae\x87\x8a\xe0\x19\x23\xaf\xcd\x6f\x6f\xf7\x7e\xaf\xe7\xdb\x1d\xbf\x4e\x67\xde\x9d\xe6\x60\x61\xd2\xc6\x5f\x67\x8a\xdb\xdd\xa5\xe1\xb1\xd8\xf8\x8b\xa7\x98\x8f\xc4\x4c\xff\xd7\x38\x3a\xf8\x1b\x00\x00\xff\xff\x34\xac\x18\xd9\xf8\x06\x00\x00")

func piecesBqSvgBytes() ([]byte, error) {
	return bindataRead(
		_piecesBqSvg,
		"pieces/bQ.svg",
	)
}

func piecesBqSvg() (*asset, error) {
	bytes, err := piecesBqSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pieces/bQ.svg", size: 1784, mode: os.FileMode(420), modTime: time.Unix(1380940052, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _piecesBrSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x5d\x6f\xd3\x30\x14\x7d\xef\xaf\xb8\x78\xaf\x6d\x1c\x27\x4d\x45\xd2\xa6\x93\x68\xc7\x84\x34\x60\x12\x1d\x88\xc7\x50\x7b\x89\x21\xb3\xab\xc4\x6d\x29\xbf\x1e\xdb\xf9\x6a\x23\x40\x93\xca\x9a\x97\x73\x72\xe3\x7b\xcf\xb9\xb6\xaf\x32\xbb\xfe\xf9\x94\xc3\x8e\x15\x25\x97\x22\x46\xc4\x71\x11\x30\xb1\x96\x94\x8b\x34\x46\x0f\xab\xb7\xa3\xd7\x08\x4a\x95\x08\x9a\xe4\x52\xb0\x18\x09\x89\xae\xe7\x83\xd9\xab\xe5\xc7\xc5\xea\xeb\xfd\x0d\x94\xbb\x14\xee\x1f\xde\xdc\xbd\x5b\x00\x1a\x61\xfc\xc5\x5f\x60\xbc\x5c\x2d\xe1\xd3\xe7\x5b\x20\x0e\xc1\xf8\xe6\x03\x02\x94\x29\xb5\x89\x30\xde\xef\xf7\xce\xde\x77\x64\x91\xe2\xdb\x22\xd9\x64\x7c\x5d\x62\xbd\x10\x9b\x85\x3a\x09\xeb\x62\x84\x38\x54\x51\xa4\x25\x4c\x65\x6d\x4e\x94\xf1\x1f\xd2\x3d\xd7\x75\xcd\x72\x74\xec\x9d\x20\xd8\x73\xaa\xb2\x18\x8d\x03\x04\x19\xe3\x69\xa6\x2c\x9f\x0f\x00\x66\xa9\xee\xe3\x90\xeb\x16\xe4\x26\x59\x73\x75\x88\xc8\x14\x1e\x79\x9e\x47\xae\x7d\xaa\x97\x51\xef\xe3\xa8\xd8\xe6\x2c\x62\x3b\x26\x24\xa5\x53\x5d\xa1\x90\x3f\x58\x74\xd5\xa4\x54\xef\x23\xab\x1a\x11\x27\x68\x23\x39\x17\x6c\x9d\x6c\xa2\x42\x6e\x05\x9d\x1e\x05\xbf\x4b\x2e\x4e\xa3\x4f\x5c\xb1\x22\xe7\x1a\xa2\x71\x9b\x4f\x93\x32\x4b\x8a\x22\x39\x44\x42\x6f\x7b\x1b\xee\xdc\xd9\x9e\x74\x57\x9b\x44\x65\x96\x01\xd0\x18\xbd\x87\x70\xe8\x87\x70\x07\xfe\xa4\xc3\x89\xc6\xb0\x85\x10\x7e\x01\xaa\x33\xea\x0d\xe9\x79\xfe\xb6\x55\x6a\x8a\x00\xff\x45\x81\x78\x4e\x30\xf4\x3d\x5d\x8d\x8c\x87\x5e\xe8\x04\x46\x86\xb4\xac\xfb\x5a\xb3\xb3\xe5\x2a\xeb\x06\x4d\x59\xdf\xef\xb0\x89\x4f\xce\x16\x69\x3b\xd1\x8c\x4c\x9a\x9e\x3a\xd6\x7d\xb5\xec\x59\x72\xfd\x53\xb7\x07\xfd\x6f\x13\xb5\x20\xd1\xd2\x63\x23\x3c\xae\xb1\xb5\xd2\xac\x39\xb7\xdf\x5a\x40\xa3\xb9\x25\x24\x68\x80\x10\x8d\x9e\xdb\xa2\x09\x7b\x41\x03\x36\xea\xbb\x2d\x86\x95\xc7\xf0\xc8\x6a\x55\xf9\x3f\x9c\x79\x50\x6d\xbd\xdf\x63\xbd\xba\x76\x80\x8f\x47\x24\xba\x7a\xb4\x4f\x7f\x36\x4f\x26\xf3\x79\xc7\xa1\x05\x49\x7d\xa7\x2d\xbb\xa0\x74\x7f\xb0\x2e\x2a\x7d\x7a\xff\x2f\x28\x7d\x7c\xeb\x5f\x48\x76\x86\x53\xfd\x6b\x31\x7f\x8e\xf9\xe0\x77\x00\x00\x00\xff\xff\x93\x31\x34\xf1\xfc\x06\x00\x00")

func piecesBrSvgBytes() ([]byte, error) {
	return bindataRead(
		_piecesBrSvg,
		"pieces/bR.svg",
	)
}

func piecesBrSvg() (*asset, error) {
	bytes, err := piecesBrSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pieces/bR.svg", size: 1788, mode: os.FileMode(420), modTime: time.Unix(1381149075, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _piecesWbSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x54\x5d\x6f\xd3\x40\x10\x7c\xef\xaf\x58\xae\xaf\xc9\x7d\xfa\x2b\x6e\x92\x0a\xd2\x52\x21\x25\x50\x89\x16\xc4\xa3\x89\xdd\xd8\xe0\xda\x91\xed\x36\x94\x5f\xcf\xee\xdd\x25\x0d\xa8\x15\x8e\xe2\xdb\xcc\xcd\xce\xcc\x9e\xec\x4c\xcf\x7f\xdd\xd7\xf0\x58\x74\x7d\xd5\x36\x33\xa6\xb8\x64\x50\x34\xeb\x36\xaf\x9a\xcd\x8c\xdd\xde\xbc\x1f\x27\x0c\xfa\x21\x6b\xf2\xac\x6e\x9b\x62\xc6\x9a\x96\x9d\xcf\x4f\xa6\x6f\x2e\x3e\x2d\x6e\xbe\x5d\x5f\x42\xff\xb8\x81\xeb\xdb\x77\xcb\x0f\x0b\x60\x63\x21\xbe\x9a\x85\x10\x17\x37\x17\xf0\xf9\xcb\x15\x28\xae\x84\xb8\xfc\xc8\x80\x95\xc3\xb0\x4d\x85\xd8\xed\x76\x7c\x67\x78\xdb\x6d\xc4\x55\x97\x6d\xcb\x6a\xdd\x0b\x24\x0a\x22\x62\x93\x40\x31\xa5\x78\x3e\xe4\x0c\x2d\x48\x19\xc3\x35\xfd\xec\x85\x76\x2d\xa5\x24\x3a\x3b\xce\xae\x18\xec\xaa\x7c\x28\x67\x2c\x08\x19\x94\x45\xb5\x29\x07\x5b\xcf\x4f\x00\xa6\x1b\x9c\xe3\xa9\xc6\x11\xda\x6d\xb6\xae\x86\xa7\x54\x9d\xc1\x5d\x55\xd7\x69\x83\x83\xb9\x72\xdc\x3d\xd4\x45\x5a\x3c\x16\x4d\x9b\xe7\x1e\x3a\x62\xf7\x43\xd7\xfe\x2c\xd2\x53\x69\xaf\xfd\xef\xb1\xf5\x4c\x15\x0f\x0f\x48\x5d\x35\xc5\x3a\xdb\xa6\x5d\xfb\xd0\xe4\x7f\xa1\x3f\xda\xaa\xf9\x07\xbe\xaf\x86\xa2\xab\x2b\x5c\xd2\xe0\x00\xe6\x59\x5f\x66\x5d\x97\x3d\xf9\x74\x1e\x7e\x0e\x63\x67\x3a\x9e\xca\x8e\x72\x7a\x67\xaf\x57\xa3\xee\x83\x7d\x7f\x18\x06\x94\x00\xab\x81\x2a\xdb\x6c\x28\x7d\x0d\x90\xcf\xd8\x0a\x26\x23\x13\xc1\x02\x94\xe6\x06\xcb\x90\x4b\x03\x6a\xc2\x95\x42\x98\x07\x06\xb4\xe6\xe1\xc8\x04\xc8\xd0\x21\x4f\x26\x1e\x35\x9a\x47\xca\xb3\x4d\xe4\x14\xdc\x6a\x62\x1e\x85\xc4\x0a\x03\x20\xc1\x84\x76\x12\x6e\x34\x96\x7c\x12\xd3\xbe\x09\x6d\x3d\xb1\x1d\x09\x0f\x89\xe1\xf4\x62\x1e\x9a\xbd\x0f\x32\x22\xef\x1e\x5b\x8e\x4f\x65\x71\x9f\xd6\xf2\x27\x7b\x11\x74\x0e\x22\x2f\x1d\xf1\x28\x8e\xbd\x65\xe4\x52\x90\x71\x40\xc9\x64\xe4\x86\xb6\xb7\xdf\x0c\xc4\xfc\xf5\xd3\x51\x68\xaf\xc9\x3c\xb6\xc7\x80\x3e\xfa\x50\x19\xe9\xf6\x8c\x24\x44\x7a\x44\xfa\x3b\xe1\x23\x22\xbb\x0e\x1d\x1d\x56\xdc\x31\x23\x6d\x15\x0c\x22\xca\xaa\xd2\xa0\x4a\xba\x41\xd5\x1e\x55\xda\xf1\xd4\xa1\x73\x5f\x61\x2e\xab\x4d\xf9\xc8\xcb\xad\xd4\xe4\x92\xb8\xdc\xff\x19\x4e\x87\x90\xc0\x5b\xd0\xe4\x8f\x5f\xec\xc7\x0f\x68\x39\x7a\x09\x25\xee\xb3\xde\x54\x6c\x7c\x71\x24\xeb\x4e\xcc\x27\x5c\x1e\xe6\x5d\xf9\x74\x4b\x7f\x32\x2b\x3f\x6d\x88\xea\x4b\x57\x6b\xca\xbc\x22\x6b\x95\x10\x86\xbb\x09\xf3\xaa\xc7\x8f\xfd\xf1\x3b\xf2\xe2\x33\x6f\x5f\x3b\xfb\xa2\x9d\xf9\xac\x36\xe9\x94\xfe\x42\xe6\x27\x7f\x02\x00\x00\xff\xff\xd9\xd5\xf6\x95\x05\x05\x00\x00")

func piecesWbSvgBytes() ([]byte, error) {
	return bindataRead(
		_piecesWbSvg,
		"pieces/wB.svg",
	)
}

func piecesWbSvg() (*asset, error) {
	bytes, err := piecesWbSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pieces/wB.svg", size: 1285, mode: os.FileMode(420), modTime: time.Unix(1381031942, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _piecesWkSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x54\x51\x6f\x9b\x30\x10\x7e\xef\xaf\xb8\xb9\xaf\x04\x63\x1b\x42\x42\x42\x2a\x2d\xe9\xaa\x49\xd9\x56\x69\xe9\xa6\x3d\xb2\x40\xc1\x1b\x35\x11\x38\xc9\xb2\x5f\x3f\xdb\x18\x92\x6a\xed\xba\x48\x1b\x0f\xf8\xb3\xef\x7c\xf7\x7d\xdf\x21\xa6\x57\x3f\x1e\x4a\xd8\x65\x75\xc3\x2b\x11\x23\xe2\x7a\x08\x32\xb1\xae\x52\x2e\xf2\x18\xdd\xad\xde\x0c\x46\x08\x1a\x99\x88\x34\x29\x2b\x91\xc5\x48\x54\xe8\x6a\x76\x31\x7d\xb5\xf8\x30\x5f\x7d\xb9\xbd\x86\x66\x97\xc3\xed\xdd\xeb\xe5\xdb\x39\xa0\x01\xc6\x9f\xd9\x1c\xe3\xc5\x6a\x01\x1f\x3f\xdd\x00\x71\x09\xc6\xd7\xef\x11\xa0\x42\xca\x4d\x84\xf1\x7e\xbf\x77\xf7\xcc\xad\xea\x1c\xdf\xd4\xc9\xa6\xe0\xeb\x06\xab\x44\xac\x13\xd5\x25\xac\x8a\x11\xe2\xa6\x32\x45\xaa\x85\xae\xac\xc8\x89\x26\x7e\xe2\x3a\xf5\x3c\x4f\xa7\xa3\x53\xee\x04\xc1\x9e\xa7\xb2\x88\x91\x1f\x20\x28\x32\x9e\x17\xd2\xe0\xd9\x05\xc0\x34\x57\x3a\x0e\xa5\x92\x70\xcf\xcb\x32\x12\x4a\xcd\x04\x34\x1c\x54\x9b\x64\xcd\xe5\x21\x22\x76\x5f\x6f\xcb\x2c\xca\x76\x99\xa8\xd2\x74\xa2\x2e\xd5\xd5\xf7\x2c\xba\xf4\xcc\xd3\xed\x07\xa6\x51\x44\xdc\xa0\x3f\x29\xb9\xc8\xd6\xc9\x26\xaa\xab\xad\x48\x27\x27\x87\xdf\x2a\x2e\x1e\x9f\x3e\x70\x99\xd5\x25\x57\x4b\xe4\xf7\xf7\xd3\xa4\x29\x92\xba\x4e\x0e\x96\x9b\x3d\x3e\xb2\x33\x32\x94\x90\x4d\x22\x0b\x83\x00\xd2\x18\xbd\x03\x4a\xdd\xc0\x51\xbe\x0d\x19\x2c\xdb\xcd\x10\xd9\xf8\xef\x8a\x9f\x91\xd3\xf3\x34\xd4\x26\x08\xf0\x73\xcd\x3c\x67\xa4\xdb\x04\xce\xe8\x3f\x36\xd1\x22\x68\x00\xf3\x1e\xd1\xd0\x21\xa1\xab\xd6\x40\x6b\xf5\x5d\x13\xeb\x31\xf5\x35\xa2\xd6\x09\xaa\x63\x5e\x8b\xc8\xb8\xcb\x39\xa2\x39\x90\x91\xad\xd6\x55\x6f\xd7\xa7\x04\x5d\xde\x9b\xe7\x8f\x9a\xf4\xd4\xbf\x6e\xa5\x3c\x5f\xa8\x9a\x5a\xe0\xb0\x50\x53\x0a\x1d\xdf\x73\x8d\x50\xb3\x32\xda\x46\x96\x16\x79\x2a\xa7\x43\x3e\x31\x74\x75\xd6\x48\x8b\x1a\x1b\x51\xcc\x98\xc0\xf4\x68\xc8\xd0\x4a\x62\x2a\x62\xbf\x09\x1a\xf6\x88\xb5\x26\x8c\x75\xde\xb8\xbd\x34\x3c\xa9\xd3\x15\x37\xe4\xe8\xf8\x11\x5a\xf6\x94\x7f\xc2\x39\x76\xbd\x64\x81\xd7\x5a\xa0\x48\x52\xf3\xb6\x52\xff\xfa\x13\x7b\xa9\xbe\x95\x1c\xaa\x9a\xad\xc9\xec\x68\xb2\x8a\xfd\xb3\x3e\x76\x94\xcc\x37\x3d\xfc\x6e\x8c\xe7\xd6\x9f\xe2\x5c\xfd\x01\xf5\x0f\x6e\x76\xf1\x2b\x00\x00\xff\xff\x32\xf8\xf3\xa2\xa3\x05\x00\x00")

func piecesWkSvgBytes() ([]byte, error) {
	return bindataRead(
		_piecesWkSvg,
		"pieces/wK.svg",
	)
}

func piecesWkSvg() (*asset, error) {
	bytes, err := piecesWkSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pieces/wK.svg", size: 1443, mode: os.FileMode(420), modTime: time.Unix(1380939761, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _piecesWnSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\x6d\x6f\xd3\x30\x10\xfe\xbe\x5f\x71\x78\x5f\x40\x4a\x6d\x9f\x9d\x37\x67\xcd\x26\xc8\xc6\x84\x34\x60\x12\x1b\x88\x8f\x51\x93\x35\x81\xd4\xa9\x92\x6c\xdd\xf8\xf5\x9c\xd3\x97\x6d\x50\x24\x84\xa8\xd4\xbb\xcb\x9d\xef\xee\x79\x1e\x47\x99\x9e\xdc\x2f\x1a\xb8\x2b\xbb\xbe\x6e\x6d\xca\x90\x4b\x06\xa5\x9d\xb5\x45\x6d\xe7\x29\xbb\xbe\x7a\x3b\x89\x19\xf4\x43\x6e\x8b\xbc\x69\x6d\x99\x32\xdb\xb2\x93\xe3\x83\xe9\x8b\xd3\x8f\xd9\xd5\xd7\xcb\x33\xe8\xef\xe6\x70\x79\xfd\xe6\xe2\x5d\x06\x6c\x22\xc4\x17\x9d\x09\x71\x7a\x75\x0a\x9f\x3e\x9f\x03\x72\x14\xe2\xec\x03\x03\x56\x0d\xc3\x32\x11\x62\xb5\x5a\xf1\x95\xe6\x6d\x37\x17\xe7\x5d\xbe\xac\xea\x59\x2f\xe8\xa0\x70\x07\xa9\x49\xd0\x30\x44\x5e\x0c\x05\xa3\x15\x6e\x32\x81\xb3\x7d\xba\xa7\x5d\x49\x29\xdd\x71\xf6\x14\x3b\x32\x58\xd5\xc5\x50\xa5\xcc\x0f\x18\x54\x65\x3d\xaf\x86\x31\x3e\x3e\x00\x98\xce\x89\xc7\x43\x43\x14\xda\x65\x3e\xab\x87\x87\x04\x8f\xe0\xa6\x6e\x9a\xc4\x12\xb1\x75\x38\xf9\xa5\x34\xe9\x6e\x9b\x32\x29\xef\x4a\xdb\x16\xc5\x11\xf5\x77\xed\xf7\x32\x39\x94\xe3\x6f\xfb\x3c\x19\x77\x26\xc8\x83\x5d\xa6\xa9\x6d\x39\xcb\x97\x49\xd7\xde\xda\xe2\xe8\x49\xf2\x5b\x5b\xdb\xe7\xd9\x45\x3d\x94\x5d\x53\x93\x4b\xfc\x5d\x7f\x91\xf7\x55\xde\x75\xf9\xc3\x06\xdb\x26\xfd\x88\x6e\x64\x44\x9c\x96\xf9\x50\x8d\x11\x40\x91\xb2\xf7\xa0\x94\x87\x12\x32\xd0\x8a\x07\x1e\x22\xe8\xd8\xf9\x98\xbc\xa7\x0d\x5c\x00\x06\xce\x67\xa3\x97\xa0\xc8\xd2\x41\x50\x9a\xce\xb0\xcd\x9c\x8d\x48\xa3\x32\x87\x37\xe3\xef\x37\xe6\x0c\xc4\x9f\x00\xf8\x6e\x5d\x46\x9e\xd3\x4e\x25\xb9\x41\xc0\x98\xfb\x81\xa7\x02\xae\x23\xc0\xd0\x53\x91\x03\xa0\x3d\x65\xc8\x72\x24\x64\xc8\xb5\x0f\x88\x14\x50\xc5\x70\x13\x50\x4e\x72\x19\x02\x2a\xee\x23\x35\x70\x13\xba\xba\x72\x93\x51\x3a\x4f\xaf\x09\x1a\x1a\xc1\x95\x76\x19\xed\x48\x1b\xe7\x02\x6e\x4c\xe4\x26\xd1\xa2\x90\x92\xe4\x68\x36\xc9\xb2\xb5\xd9\xf6\x49\xf3\xd8\x78\xb4\x81\x00\x12\x68\x49\x3a\x38\x58\x5c\x45\x9e\xe1\x81\x5b\xae\x49\x3b\xd2\x6f\x1d\x44\xeb\xba\x4f\x61\xe8\x72\xa1\x13\x56\xee\xfc\x85\x63\x19\xac\xc5\xdf\x46\x48\xe8\x62\x9a\x20\x65\x0c\x0a\x3d\x47\x9b\xee\x27\xda\x5c\xd2\x68\xff\x8f\xe8\xc6\xdd\x61\x40\xe6\x35\x38\x1a\xe3\x1f\x88\x16\x38\x20\x7b\x0b\xbb\x8e\x1f\x7b\x11\x3c\x7f\xc1\xff\x02\x01\x92\x22\x8f\x7b\x70\xb7\x67\x94\x76\x7f\x61\xd3\xb1\x03\x30\x74\xb9\xed\x6f\xda\x6e\x91\xb2\x45\x3e\x74\xf5\xfd\x4b\xc9\xe3\x30\xf4\xa8\xcf\x9b\x38\xb3\x7e\x34\x3c\x34\xda\x9b\x04\x1c\x23\xfd\xea\x1f\xc0\x4f\xc5\x9c\xbe\x2d\xee\xd3\x71\x7c\xf0\x33\x00\x00\xff\xff\x6e\x48\x31\xa3\xfd\x04\x00\x00")

func piecesWnSvgBytes() ([]byte, error) {
	return bindataRead(
		_piecesWnSvg,
		"pieces/wN.svg",
	)
}

func piecesWnSvg() (*asset, error) {
	bytes, err := piecesWnSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pieces/wN.svg", size: 1277, mode: os.FileMode(420), modTime: time.Unix(1380941789, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _piecesWpSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\x5b\x6f\xd3\x30\x14\x7e\xdf\xaf\x38\x78\xaf\xa9\x1d\x3b\x49\x73\x59\xd3\x49\xb4\x63\x42\x1a\x30\x89\x0e\xc4\x63\xd4\x78\x8d\x21\xb3\x2b\xc7\x5b\xe9\x7e\x3d\xc7\x6e\x1a\x2e\xc2\x0f\xf1\x77\xbe\xf3\x9d\x6b\xbc\xb8\xfe\xf9\xd4\xc3\x8b\xb4\x83\x32\xba\x26\x9c\xc6\x04\xa4\xde\x9a\x56\xe9\x5d\x4d\x1e\x36\xef\x66\x05\x81\xc1\x35\xba\x6d\x7a\xa3\x65\x4d\xb4\x21\xd7\xcb\x8b\xc5\x9b\xf5\xa7\xd5\xe6\xdb\xfd\x0d\x0c\x2f\x3b\xb8\x7f\x78\x7b\xf7\x7e\x05\x64\xc6\xd8\xd7\x64\xc5\xd8\x7a\xb3\x86\xcf\x5f\x6e\x81\x53\xce\xd8\xcd\x47\x02\xa4\x73\x6e\x5f\x31\x76\x38\x1c\xe8\x21\xa1\xc6\xee\xd8\xad\x6d\xf6\x9d\xda\x0e\x0c\x85\xcc\x0b\x31\x88\x61\x32\xce\x69\xeb\x5a\x82\x25\x7c\x66\x6c\x4e\x0f\xf5\x7f\xc2\x45\x1c\xc7\x5e\x4e\xfe\xec\x9d\x13\x38\xa8\xd6\x75\x35\x49\x33\x02\x9d\x54\xbb\xce\x05\xbc\xbc\x00\x58\xec\x1b\xd7\xe1\x0d\xd0\xd6\xe4\x03\x08\x11\x95\xb0\x02\x5e\xd2\xbc\x44\xc4\x8b\x88\xc7\x08\x03\x48\xbc\xc3\xdf\xb4\xf0\x04\x15\x65\xc4\x53\x9a\x73\x8f\x73\xe4\x33\x9a\x14\x5e\x32\xa7\x45\x12\xe1\x37\x03\xa4\xb2\x08\xbd\x59\x79\x82\x82\x7b\x7f\x40\x09\x8d\x13\x2f\x4d\xd3\x48\xa4\xb4\x48\x81\xe7\xb4\xe4\x91\x98\x7b\x1e\x45\x69\xb0\x72\x1a\x63\x68\x8c\x01\x09\xa7\x59\x31\xc2\x12\x53\xdf\x41\x92\x9c\xf1\x6a\xc4\x41\x22\x4a\x8c\x19\x23\x7d\xb6\x72\xca\x89\x5c\x36\x1f\xab\x89\x62\x6a\xe2\x04\x7d\x67\x01\x9d\xda\x45\x2d\xcf\x4f\x43\x88\x8c\xe2\x56\xce\xd3\xa1\x95\xf3\x71\x6e\x31\x1f\x97\x11\x80\x77\xce\xc7\x75\x61\x11\xc1\x71\x7f\x61\x9d\xaf\x40\xc2\x82\x07\x77\xec\xf1\xa9\x98\x7d\xb3\x55\xee\x58\xf1\x2b\x78\x54\x7d\x5f\x5d\x3e\x86\x73\xb2\x66\xff\x78\x67\xf6\xb9\x97\x95\x36\xfa\x55\x5a\x73\x85\x29\xac\xf9\x21\xab\xcb\x38\x9c\xb3\x3d\x0b\xbf\xb7\xc2\xf1\x27\xa6\x57\x5a\x6e\x9b\x7d\x65\xcd\xb3\x6e\xff\x62\xbf\x1b\xa5\xab\x27\xe5\xa4\x9d\xe8\x60\xf5\x0a\xaf\x2a\x9d\xc8\xb6\x19\xba\xc6\xda\xe6\xe8\xab\xcb\x89\xfe\xdd\x1f\x01\x86\xcf\xd1\xbf\xb6\xe5\xc5\xaf\x00\x00\x00\xff\xff\x8e\xdb\xcf\x17\x30\x03\x00\x00")

func piecesWpSvgBytes() ([]byte, error) {
	return bindataRead(
		_piecesWpSvg,
		"pieces/wP.svg",
	)
}

func piecesWpSvg() (*asset, error) {
	bytes, err := piecesWpSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pieces/wP.svg", size: 816, mode: os.FileMode(420), modTime: time.Unix(1380940512, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _piecesWqSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x54\xdf\x6f\x9b\x30\x10\x7e\xef\x5f\x71\x73\x5f\x36\xc9\x60\x8c\x21\x21\x24\xb4\xda\x68\x57\x4d\xea\xb6\x4a\x6b\x37\xed\x91\x05\x0a\x6c\xd4\x44\xe0\x26\x4b\xff\xfa\x9d\xcd\x8f\x64\xd1\xd4\xbe\xac\x05\x29\x77\x3e\xdf\xdd\xf7\x7d\x47\xec\xc5\xe9\xef\xbb\x0a\xd6\x59\xd3\x96\xb5\x8c\x08\xb7\x1d\x02\x99\x5c\xd6\x69\x29\xf3\x88\xdc\x5c\xbf\xb7\x02\x02\xad\x4a\x64\x9a\x54\xb5\xcc\x22\x22\x6b\x72\x7a\x72\xb4\x78\x75\xf6\x39\xbe\xfe\x7e\x75\x0e\xed\x3a\x87\xab\x9b\x77\x97\x1f\x62\x20\x16\x63\xdf\x44\xcc\xd8\xd9\xf5\x19\x7c\xf9\x7a\x01\xdc\xe6\x8c\x9d\x7f\x22\x40\x0a\xa5\x56\x21\x63\x9b\xcd\xc6\xde\x08\xbb\x6e\x72\x76\xd1\x24\xab\xa2\x5c\xb6\x0c\x13\x99\x4e\xc4\x22\x86\xcd\x38\xb7\x53\x95\x12\x84\xd0\x9d\x91\x9c\x6c\xa3\x7f\x94\xbb\x8e\xe3\xe8\x74\xb2\xcf\x9d\x13\xd8\x94\xa9\x2a\x22\xe2\xf9\x04\x8a\xac\xcc\x0b\x65\xfc\x93\x23\x80\x45\x8e\x3a\xb6\x15\x4a\xa8\x57\xc9\xb2\x54\xdb\x90\xcf\xe1\xb6\xac\xaa\xf0\xf8\xd6\x3c\xdd\xca\x3a\xd8\xb5\x9a\xfb\x2a\x0b\xb3\x75\x26\xeb\x34\x9d\x63\x8b\xa6\xfe\x95\x85\xc7\x8e\x79\x86\xb5\x65\x60\x43\x6e\xfb\x63\xa4\x2a\x65\xb6\x4c\x56\x61\x53\xdf\xcb\x74\xbe\x17\xfc\x59\x97\xf2\xef\xe8\x5d\xa9\xb2\xa6\x2a\xd1\x84\xde\x58\x9f\x26\x6d\x91\x34\x4d\xb2\x0d\x25\xce\x7d\x0c\xef\xd8\x19\x51\x28\x6b\x95\xa8\xc2\x78\x00\x69\x44\x3e\xc2\x0c\xb8\x80\xb7\xe0\xe2\xeb\x00\xc7\x17\x7c\x7a\x18\x31\x39\x0f\xa4\x2f\x53\x4d\x22\xdb\xdb\xba\xb9\x8b\x88\x71\xab\x44\x65\xaf\x2d\x4e\x2d\xfe\x86\x00\x7b\x5e\x18\xee\xdb\x3e\xb5\xf0\xe7\xf9\xa1\x84\xfb\x22\x8a\xa6\xd4\xf2\x5e\x42\x8e\xeb\x21\xd0\x63\x30\xd4\x9d\x40\x0c\x7c\x8a\x03\x76\x91\x11\x08\xa7\xb7\x13\xbd\x73\x09\x22\xa0\xdc\xd3\x96\x53\xd7\xef\x2c\xe7\x68\x5d\x7f\xa8\x40\xdf\x45\x7f\x66\x5c\x3e\xdb\x85\xb9\x47\xb9\x33\x78\xa6\x78\xda\xf5\x32\xa0\x0f\x30\x10\xef\x0f\xdc\xc1\x91\xf8\x71\xaf\xd4\xfc\x49\xe2\x68\x02\xd0\x28\xc6\xe2\xd1\xa2\xc2\xd1\x7a\x34\x23\x81\xcb\xc1\x43\x4b\x85\xc0\x75\xdc\x65\x0b\x4d\xb1\xf3\x26\xa3\xd5\xed\xc4\x54\x6f\x70\x2a\x82\x3d\xdb\x0f\x48\x68\x8d\xee\xe8\x09\x6f\xd8\x1d\x3c\xa1\x87\x62\x3a\xe8\xc8\xa4\xdf\x99\x80\x46\xeb\x20\x85\x18\x68\x88\x9e\x98\x18\xa9\xea\x8d\x8e\xbe\xc9\x47\x41\xfa\x23\x04\xfd\xa7\x88\x3b\x64\x33\xdb\xdd\xe7\xfa\x1f\xa3\xdc\x1b\x1b\x76\x9d\x99\xbf\xc0\x6c\x60\x73\xd0\xd9\x5c\x85\xe6\xae\x79\xa4\xdf\x6e\xd4\x01\xd5\xf2\x90\x79\x67\x7b\xf5\x4f\xf5\x5c\xb0\x1c\x6f\x76\x7d\x71\x9f\x1c\xfd\x09\x00\x00\xff\xff\x5a\xfc\x96\xd0\x7b\x06\x00\x00")

func piecesWqSvgBytes() ([]byte, error) {
	return bindataRead(
		_piecesWqSvg,
		"pieces/wQ.svg",
	)
}

func piecesWqSvg() (*asset, error) {
	bytes, err := piecesWqSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pieces/wQ.svg", size: 1659, mode: os.FileMode(420), modTime: time.Unix(1380859243, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _piecesWrSvg = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x53\xdf\x6f\xd3\x30\x10\x7e\xef\x5f\x71\x78\xaf\x6d\x1c\xe7\x47\x47\xd2\xa6\x93\x68\xc7\x84\x34\x60\x12\x1d\x88\xc7\x50\x7b\x89\x21\xb3\xa3\xc4\x6d\x28\x7f\x3d\xb6\xd3\x24\xa5\x94\x31\x69\x7e\xf9\xce\x97\xbb\xef\xbe\xbb\xf8\xe6\x57\x3f\x1f\x0b\xd8\xb1\xaa\xe6\x52\x24\x88\x38\x2e\x02\x26\x36\x92\x72\x91\x25\xe8\x7e\xfd\x76\xf2\x1a\x41\xad\x52\x41\xd3\x42\x0a\x96\x20\x21\xd1\xd5\x62\x34\x7f\xb5\xfa\xb8\x5c\x7f\xbd\xbb\x86\x7a\x97\xc1\xdd\xfd\x9b\xdb\x77\x4b\x40\x13\x8c\xbf\xf8\x4b\x8c\x57\xeb\x15\x7c\xfa\x7c\x03\xc4\x21\x18\x5f\x7f\x40\x80\x72\xa5\xca\x18\xe3\xa6\x69\x9c\xc6\x77\x64\x95\xe1\x9b\x2a\x2d\x73\xbe\xa9\xb1\x0e\xc4\x26\x50\x27\x61\x4d\x46\x88\x43\x15\x45\xba\x84\x61\xd6\xe2\x44\x9d\x9c\x49\xf7\x5c\xd7\x35\xe1\xe8\x58\x3b\x41\xd0\x70\xaa\xf2\x04\x05\x21\x82\x9c\xf1\x2c\x57\xd6\x5e\x8c\x00\xe6\x99\xee\x63\x5f\xe8\x16\x64\x99\x6e\xb8\xda\xc7\x64\x06\x0f\xbc\x28\xe2\x8b\x07\x7b\xda\xdb\xe4\xe4\xeb\xa4\xda\x16\x2c\x66\x3b\x26\x24\xa5\x33\x4d\x51\xc9\x1f\x2c\xbe\x70\xed\xe9\xee\x13\x5b\x36\x26\x4e\xd8\x7b\x0a\x2e\xd8\x26\x2d\xe3\x4a\x6e\x05\x9d\x1d\x39\xbf\x4b\x2e\xfe\xf4\x3e\x72\xc5\xaa\x82\x6b\x88\x83\x3e\x9f\xa6\x75\x9e\x56\x55\xba\x8f\x85\x9e\x7b\xef\x1e\xd4\xd9\xa6\x74\x5b\x65\xaa\x72\x6b\x01\xd0\x04\xbd\x87\x68\xec\x47\x70\x0b\xfe\x74\xc0\xa9\xc6\xa8\x87\x08\x7e\x01\x3a\x64\x1c\x26\x72\xa2\xf9\xdb\x56\xa9\x19\x02\xfc\x8f\x0a\xc4\x6b\xb9\x0c\x7a\xa6\x84\x3f\x60\xe7\x9f\xbe\xb8\x08\x19\x93\xc0\x90\x91\xb1\x69\x83\x84\x1d\x10\xa2\xd1\x73\x7b\x34\x6e\x2f\xec\xc0\x7a\x7d\xb7\x47\x3b\x82\xa0\x03\x12\xbc\x48\x93\x65\x30\x4c\x5a\xdb\xa5\x51\x13\x1c\xd0\x68\x7d\x22\xed\x10\xae\xd1\x8b\x9c\xb0\x4d\x1c\x2c\x72\xf9\x0c\x51\x70\xfa\x82\xec\xa3\x79\x4a\x6b\x5f\xcc\xf7\x9c\xb0\xfd\x41\x64\xb0\x5a\x01\xff\x1f\xff\xb9\xa1\xd9\xa5\x39\x7e\x95\x7f\xad\xc3\x79\x95\x73\x9c\xe9\xb5\x36\x5b\xbb\x18\xfd\x0e\x00\x00\xff\xff\xf2\x63\xeb\x8b\x78\x04\x00\x00")

func piecesWrSvgBytes() ([]byte, error) {
	return bindataRead(
		_piecesWrSvg,
		"pieces/wR.svg",
	)
}

func piecesWrSvg() (*asset, error) {
	bytes, err := piecesWrSvgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pieces/wR.svg", size: 1144, mode: os.FileMode(420), modTime: time.Unix(1380941678, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"pieces/.DS_Store": piecesDs_store,
	"pieces/bB.svg":    piecesBbSvg,
	"pieces/bK.svg":    piecesBkSvg,
	"pieces/bN.svg":    piecesBnSvg,
	"pieces/bP.svg":    piecesBpSvg,
	"pieces/bQ.svg":    piecesBqSvg,
	"pieces/bR.svg":    piecesBrSvg,
	"pieces/wB.svg":    piecesWbSvg,
	"pieces/wK.svg":    piecesWkSvg,
	"pieces/wN.svg":    piecesWnSvg,
	"pieces/wP.svg":    piecesWpSvg,
	"pieces/wQ.svg":    piecesWqSvg,
	"pieces/wR.svg":    piecesWrSvg,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"pieces": &bintree{nil, map[string]*bintree{
		".DS_Store": &bintree{piecesDs_store, map[string]*bintree{}},
		"bB.svg":    &bintree{piecesBbSvg, map[string]*bintree{}},
		"bK.svg":    &bintree{piecesBkSvg, map[string]*bintree{}},
		"bN.svg":    &bintree{piecesBnSvg, map[string]*bintree{}},
		"bP.svg":    &bintree{piecesBpSvg, map[string]*bintree{}},
		"bQ.svg":    &bintree{piecesBqSvg, map[string]*bintree{}},
		"bR.svg":    &bintree{piecesBrSvg, map[string]*bintree{}},
		"wB.svg":    &bintree{piecesWbSvg, map[string]*bintree{}},
		"wK.svg":    &bintree{piecesWkSvg, map[string]*bintree{}},
		"wN.svg":    &bintree{piecesWnSvg, map[string]*bintree{}},
		"wP.svg":    &bintree{piecesWpSvg, map[string]*bintree{}},
		"wQ.svg":    &bintree{piecesWqSvg, map[string]*bintree{}},
		"wR.svg":    &bintree{piecesWrSvg, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
